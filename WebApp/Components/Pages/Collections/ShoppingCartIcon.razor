@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.IdentityModel.Tokens
@using WebApp.Services.CartService
@implements IDisposable
@inject ICartService CartService
@inject ProtectedLocalStorage ProtectedLocalStorage

<MudBadge Content="GetCount()" Origin="Origin.CenterRight" Overlap="true" Color="Color.Error" Class="ma-1 pa-1">
	<MudIconButton  Size="Size.Large" Href="/cart" Icon="@Icons.Material.Filled.ShoppingCart" Color="Color.Inherit" ClickPropagation="true" />
</MudBadge>


@code
{
	
	protected override void OnInitialized()
	{
		CartService.OnChange += StateHasChanged;
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			var result = await CartService.GetCartItems();
			StateHasChanged();
		}
	}

	private int GetCount()
	{
		return CartService.GetCount();
	}
	public void Dispose()
	{
		CartService.OnChange -= StateHasChanged;
	}
}
